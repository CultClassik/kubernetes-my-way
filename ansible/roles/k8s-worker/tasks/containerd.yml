---
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd

## Prerequisites
- name: containerd.conf ensure exists
  ansible.builtin.file:
    path: /etc/modules-load.d/containerd.conf
    state: touch
    mode: "u=rw,g=r,o=r"
    owner: root
    group: root

- name: containerd.conf ensure exists
  lineinfile:
    path: /etc/modules-load.d/containerd.conf
    line: "{{ item }}"
  loop: 
    - overlay
    - br_netfilter

- name: /etc/sysctl.d/99-kubernetes-cri.conf
  copy:
    src: 99-kubernetes-cri.conf
    dest: /etc/sysctl.d/99-kubernetes-cri.conf

# - name: Ensure directory exists - 

# - name: Manage sysctl entries for cri
#   sysctl:
#     name: "{{ item }}"
#     value: '1'
#     sysctl_set: yes
#     state: present
#     reload: yes
#   loop:
#     - net.bridge.bridge-nf-call-iptables
#     - net.ipv4.ip_forward
#     - net.bridge.bridge-nf-call-ip6tables

## Add Docker's official GPG key
- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

## Add Docker apt repository.
- name: Add Docker Repository
  apt_repository:
    repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

## Install containerd
- name: Install apt packages for k8s nodes
  apt:
    update_cache: yes
    name: containerd.io

# create containerd config folder?

# Configure containerd
# Restart containerd
- name: Create containerd config
  template:
    src: containerd_config.toml.j2
    dest: /etc/containerd/config.toml
  notify: Restart containerd service

- name: Enable and start containerd service
  systemd:
    name: containerd
    enabled: yes
    state: started