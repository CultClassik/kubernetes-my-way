---
#
# Configure vbox host, generate tls certs, kubectl conf files
#
- hosts: localhost
  become: yes
  tags: vbox_host_only
  vars:
    docker_group_members:
      - "{{ local_id }}"
  tasks:
    - name: Gather facts
      tags: always
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: True
      loop: "{{ groups['k8s_controller'] | union(groups['k8s_node']) | union(groups['k8s_etcd']) }}"

    - name: Configure host system components
      include_role:
        name: vbox-host

    - name: Install kube tools
      include_role:
        name: kubetools
      vars:
        kubectl_version: "{{ k8s_version }}"
        kctl_user_id: "{{ local_id }}"

- hosts:
  - k8s_controller
  - localhost
  become: yes
  tags: all_hosts
  tasks:
    # Create hosts files on all systems - Required for kube dns to function
    - name: add hosts to hosts
      tags: hostsfile
      lineinfile:
        path: /etc/hosts
        line: "{{ hostvars[item]['ansible_'+private_if].ipv4.address }} {{ hostvars[item].inventory_hostname_short }}" #" {{ hostvars[item].inventory_hostname }}"
      loop: "{{ groups['k8s_controller'] | union(groups['k8s_node']) | union(groups['k8s_etcd']) }}"

# Create etcd cluster
- hosts: k8s_etcd
  become: yes
  tags: etcd_only
  tasks:
  - name: Install and configure etcd
    include_role:
      name: k8s-etcd

# Setup k8s controllers
- hosts: k8s_controller
  become: yes
  tags: controller_only
  tasks:
    - name: Install and configure controller services
      include_role:
        name: k8s-controller
    - name: Create .kube dir for root user
      file:
        path: "/root/.kube"
        state: directory
    - name: Copy kubeconfig files
      copy:
        src: "{{ k8s_conf_files_dir }}/admin.kubeconfig"
        dest: "/root/.kube/config"
    - name: Install kube tools
      include_role:
        name: kubetools
      vars:
        kubectl_version: "{{ k8s_version }}"
        kctl_user_id: "{{ user_id }}"

# configures controller ability to talk to work nodes
- hosts: localhost
  become: yes
  tags: run_once
  handlers:
    - name: Apply yaml coredns
      shell:
        cmd: kubectl apply --kubeconfig "{{ k8s_conf_files_dir }}/admin.kubeconfig" -f "{{ k8s_conf_files_dir }}/coredns.yaml"

  tasks:
    - name: Apply API to Nodes cluster role and cluster role binding
      shell:
        cmd: kubectl apply --kubeconfig "{{ k8s_conf_files_dir }}/admin.kubeconfig" -f "{{ playbook_dir }}/files/api-to-nodes-rbac.yaml"

    - name: Create coredns yaml
      template:
        src: "./files/coredns.yaml.j2"
        dest: "{{ k8s_conf_files_dir }}/coredns.yaml"
        owner: "{{ local_id }}"
        group: "{{ local_id }}"
      notify: Apply yaml coredns 

    - name: Create Calico yaml
      template:
        src: "./files/calico.yaml.j2"
        dest: "{{ k8s_conf_files_dir }}/calico.yaml"
        owner: "{{ local_id }}"
        group: "{{ local_id }}"
        
    # calico causing issues atm, will troubleshoot later - probably need to set CALICO_IPV4POOL_CIDR
    #- name: Apply yaml Calico
    #  shell:
    #    cmd: kubectl apply --kubeconfig "{{ k8s_conf_files_dir }}/admin.kubeconfig" -f https://docs.projectcalico.org/manifests/calico.yaml

# Setup k8s nodes
- hosts:
  - k8s_node
  - k8s_controller
  become: yes
  tags: node_only
  tasks:
    - name: Install and configure node services
      include_role:
        name: k8s-node